{
  "apidoc": {
    "version": "0.9.6"
  },
  "name": "apidoc generator",
  "organization": {
    "key": "gilt"
  },
  "application": {
    "key": "apidoc-generator"
  },
  "namespace": "com.gilt.apidoc.generator.v0",
  "version": "0.9.6",
  "base_url": "http://localhost:9000",
  "description": "Documentation for an apidoc code generator API",
  "headers": [],
  "imports": [
    {
      "uri": "http://localhost:9000/gilt/apidoc-spec/0.9.6/service.json",
      "namespace": "com.gilt.apidoc.spec.v0",
      "organization": {
        "key": "gilt"
      },
      "application": {
        "key": "apidoc-spec"
      },
      "version": "0.9.6",
      "enums": [
        "method",
        "parameter_location",
        "response_code_option"
      ],
      "unions": [
        "response_code"
      ],
      "models": [
        "apidoc",
        "application",
        "body",
        "deprecation",
        "enum",
        "enum_value",
        "field",
        "header",
        "import",
        "model",
        "operation",
        "organization",
        "parameter",
        "resource",
        "response",
        "service",
        "union",
        "union_type"
      ]
    }
  ],
  "enums": [],
  "unions": [],
  "models": [
    {
      "name": "error",
      "plural": "errors",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "description": "Machine readable code for this specific error message",
          "required": true
        },
        {
          "name": "message",
          "type": "string",
          "description": "Description of the error",
          "required": true
        }
      ]
    },
    {
      "name": "generator",
      "plural": "generators",
      "description": "The generator metadata.",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "language",
          "type": "string",
          "required": false
        },
        {
          "name": "description",
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "name": "healthcheck",
      "plural": "healthchecks",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "example": "healthy"
        }
      ]
    },
    {
      "name": "invocation",
      "plural": "invocations",
      "description": "The result of invoking a generator.",
      "fields": [
        {
          "name": "source",
          "type": "string",
          "description": "The actual source code.",
          "required": true
        }
      ]
    },
    {
      "name": "invocation_form",
      "plural": "invocation_forms",
      "fields": [
        {
          "name": "service",
          "type": "com.gilt.apidoc.spec.v0.models.service",
          "required": true
        },
        {
          "name": "user_agent",
          "type": "string",
          "required": false
        }
      ]
    }
  ],
  "resources": [
    {
      "type": "generator",
      "plural": "generators",
      "operations": [
        {
          "method": "GET",
          "path": "/generators",
          "description": "Get all available generators",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "location": "Query",
              "description": "Filter generators with this key",
              "required": false
            },
            {
              "name": "limit",
              "type": "integer",
              "location": "Query",
              "description": "The number of records to return",
              "required": true,
              "default": "100",
              "minimum": 0
            },
            {
              "name": "offset",
              "type": "integer",
              "location": "Query",
              "description": "Used to paginate. First page of results is 0.",
              "required": true,
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[generator]"
            }
          ]
        },
        {
          "method": "GET",
          "path": "/generators/:key",
          "description": "Get generator with this key",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "generator"
            }
          ]
        }
      ]
    },
    {
      "type": "healthcheck",
      "plural": "healthchecks",
      "operations": [
        {
          "method": "GET",
          "path": "/_internal_/healthcheck",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "healthcheck"
            }
          ]
        }
      ]
    },
    {
      "type": "invocation",
      "plural": "invocations",
      "operations": [
        {
          "method": "POST",
          "path": "/invocations/:key",
          "description": "Invoke a generator",
          "body": {
            "type": "invocation_form"
          },
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invocation"
            },
            {
              "code": {
                "integer": {
                  "value": 409
                }
              },
              "type": "[error]"
            }
          ]
        }
      ]
    }
  ]
}
